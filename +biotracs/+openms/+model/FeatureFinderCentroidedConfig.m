% BIOASTER
%> @file		FeatureFinderCentroidedConfig.m
%> @class		biotracs.openms.model.FeatureFinderCentroidedConfig
%> @link		http://www.bioaster.org
%> @copyright	Copyright (c) 2014, Bioaster Technology Research Institute (http://www.bioaster.org)
%> @license		BIOASTER
%> @date		2016


classdef FeatureFinderCentroidedConfig < biotracs.openms.model.BaseProcessConfig
    
    properties(Constant)
    end
    
    properties(SetAccess = protected)
    end
    
    % -------------------------------------------------------
    % Public methods
    % -------------------------------------------------------
    
    methods
        
        % Constructor
        function this = FeatureFinderCentroidedConfig( )
            this@biotracs.openms.model.BaseProcessConfig( );
            this.updateParamValue('OutputFileExtension','featureXML');
            this.createParam('SeedList', '' , ...
                'Constraint', biotracs.core.constraint.IsInputPath(), ...
                'Description', 'User specified seed lists');
            
            this.createParam('MzToleranceMassTrace', 0.01 , ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Tolerated m/z deviation of peaks belonging to the same mass trace. It should be larger than the m/z resolution of the instrument. This value must be smaller than that 1/charge_high! (default: 0.01)');
            this.createParam('MinSpectra', 8, ...
                'Constraint', biotracs.core.constraint.IsPositive( 'Type', 'integer' ), ...
                'Description', 'Number of spectra that have to show a similar peak mass in a mass trace. (default: 8)');
            this.createParam('MaxMissing', 2, ...
                'Constraint', biotracs.core.constraint.IsPositive( 'Type', 'integer', 'Strict', true ), ...
                'Description', 'Number of consecutive spectra where a high mass deviation or missing peak is acceptable. This parameter should be well below MinSpectra! (default: 2)');
            this.createParam('SlopeBound', 1, ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'The maximum slope of mass trace intensities when extending from the highest peak. This parameter is important to seperate overlapping elution peaks. It should be increased if feature elution profiles fluctuate a lot. (default: 1)');
            this.createParam('LowerCharge', 2, ...
                'Constraint', biotracs.core.constraint.IsPositive( 'Type', 'integer', 'Strict', true ), ...
                'Description', 'Lowest charge to search for. (default: 2)');
            this.createParam('UpperCharge', 4, ...
                'Constraint', biotracs.core.constraint.IsPositive( 'Type', 'integer', 'Strict', true ), ...
                'Description', 'Highest charge to search for. (default: 4)');
            this.createParam('MzToleranceIsotopicPattern', 0.01, ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Tolerated m/z deviation from the theoretical isotopic pattern. It should be larger than the m/z resolution of the instrument. This value must be smaller than that 1/charge_high! (default: 0.01)');
            this.createParam('MinScoreSeed', 0.5, ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Minimum seed score a peak has to reach to be used as seed. The seed score is the geometric mean of intensity score, mass trace score and isotope pattern score. If your features show a large deviation from the averagene isotope distribution or from an gaussian elution profile, lower this score. (default: 0.5)');
            this.createParam('MinScoreFeature', 0.5, ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Feature score threshold for a feature to be reported. The feature score is the geometric mean of the average relative deviation and the correlation between the model and the observed peaks. (default: 0.5)');
            this.createParam('RtTolerance', 30, ...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Allowed RT deviation of seeds from the user-specified seed position. (default: 30)');
            this.createParam('MzToleranceUserSeed', 0.1,...
                'Constraint', biotracs.core.constraint.IsPositive(), ...
                'Description', 'Allowed m/z deviation of seeds from the user-specified seed position. (default: 0.1)');
            
            this.optionSet.addElements(...
                'MzToleranceMassTrace',     biotracs.core.shell.model.Option('-algorithm:mass_trace:mz_tolerance "%g"'), ...
                'SeedList',     biotracs.core.shell.model.Option('-seeds "%s"'), ...
                'MinSpectra',               biotracs.core.shell.model.Option('-algorithm:mass_trace:min_spectra "%g"'), ...
                'MaxMissing',               biotracs.core.shell.model.Option('-algorithm:mass_trace:max_missing "%g"'), ...
                'SlopeBound',               biotracs.core.shell.model.Option('-algorithm:mass_trace:slope_bound "%g"'), ...
                'LowerCharge',              biotracs.core.shell.model.Option('-algorithm:isotopic_pattern:charge_low "%g"'), ...
                'UpperCharge',              biotracs.core.shell.model.Option('-algorithm:isotopic_pattern:charge_high "%g"'), ...
                'MzToleranceIsotopicPattern',       biotracs.core.shell.model.Option('-algorithm:isotopic_pattern:mz_tolerance "%g"'), ...
                'MinScoreSeed',             biotracs.core.shell.model.Option('-algorithm:seed:min_score "%g"'), ...
                'MinScoreFeature',          biotracs.core.shell.model.Option('-algorithm:feature:min_score "%g"'), ...
                'RtTolerance',              biotracs.core.shell.model.Option('-algorithm:user-seed:rt_tolerance "%g"'), ...
                'MzToleranceUserSeed',      biotracs.core.shell.model.Option('-algorithm:user-seed:mz_tolerance "%g"')...
                );
        end
        
    end
    
    % -------------------------------------------------------
    % Protected methods
    % -------------------------------------------------------
    
    methods(Access = protected)
        
    end
    
end
